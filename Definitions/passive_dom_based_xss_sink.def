var name = "DOM-Based XSS Sink";
var detail = "A potential DOM-based XSS sink has been found. This item should be inspected further for DOM-based XSS."; //this is the finding's actual detail when it's found by the scanner
var description = "Checks for potential DOM-based XSS sinks";//this describes the check
var type = "Passive";
var severity = "Information";
var confidence = "Tentative";
var output = "";
var error = "";
var requestMarkers = [];
var responseMarkers = [];
var responseBodyOffset = 0;

//DOM-based search ----------------------------------------------------------------------------And by function...
re = /document\.location|document\.url|document\.urlencoded|document.referrer|window\.location|document\.write|document\.writeln|document\.body\.innerhtml|eval\(|window\.execscript|window\.setinterval|window\.settimeout/gm;

//var re = new RegExp("document", "gm");
//re = /document/gm;

//alternative list
//https://code.google.com/p/domxsswiki/wiki/FindingDOMXSS
//re = /((src|href|data|location|code|value|action)\s*["'\]]*\s*\+?\s*=)|((replace|assign|navigate|getResponseHeader|open(Dialog)?|showModalDialog|eval|evaluate|execCommand|execScript|setTimeout|setInterval)\s*["'\]]*\s*\()/;

function addRequestMarkers(startindex, stopindex)
{
    this.requestMarkers.push(Number(startindex), Number(stopindex));
}

function addResponseMarkers(startindex, stopindex)
{
    this.responseMarkers.push(Number(startindex), Number(stopindex));
}

function getResponseBody(response)
{
    this.responseBodyOffset = response.indexOf("\r\n\r\n")+4;
    return response.slice(response.indexOf("\r\n\r\n")+4, response.length);
}

function test(response){

    while (m = re.exec(response)) {
        addResponseMarkers((m.index + this.responseBodyOffset), (m.index + this.responseBodyOffset + m.valueOf().toString().length));
    }
    
    if(this.responseMarkers.length > 0)
        return true;
    else 
        return false;
    
}

try{
    
    response_body = getResponseBody(response);
    result = test(response_body);
}
catch(err)
{
    result = false;
    output += "\n" + name + " - Error: " + err;
}